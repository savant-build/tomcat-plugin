/*
 * Copyright (c) 2014-2024, Inversoft Inc., All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */
def savantVersion = "2.0.0"
// 2.0.0 for tomcat was release way ahead of the rest of Savant, back in 2017
project(group: "org.savantbuild.plugin", name: "tomcat", version: "2.0.2", licenses: ["Apache-2.0"]) {
  workflow {
    fetch {
      cache()
      url(url: "https://repository.savantbuild.org")
    }
    publish {
      cache()
    }
  }

  publishWorkflow {
    subversion(repository: "https://svn.savantbuild.org")
  }

  dependencies {
    group(name: "provided") {
      dependency(id: "org.savantbuild:savant-core:${savantVersion}")
      dependency(id: "org.savantbuild:savant-dependency-management:${savantVersion}")
      dependency(id: "org.savantbuild:savant-utils:${savantVersion}")
      dependency(id: "org.savantbuild:savant-version:${savantVersion}")
    }
    group(name: "compile") {
      dependency(id: "org.savantbuild.plugin:dependency:${savantVersion}")
      dependency(id: "org.savantbuild.plugin:file:${savantVersion}")
    }
    group(name: "test-compile", export: false) {
      dependency(id: "org.savantbuild:savant-io:${savantVersion}")
      dependency(id: "org.testng:testng:6.8.7")
    }
  }

  publications {
    standard()
  }
}

// Plugins
dependency = loadPlugin(id: "org.savantbuild.plugin:dependency:2.0.0-RC.7")
groovy = loadPlugin(id: "org.savantbuild.plugin:groovy:2.0.0-RC.6")
groovyTestNG = loadPlugin(id: "org.savantbuild.plugin:groovy-testng:2.0.0-RC.6")
idea = loadPlugin(id: "org.savantbuild.plugin:idea:2.0.0-RC.7")
release = loadPlugin(id: "org.savantbuild.plugin:release-git:2.0.0-RC.6")

// Plugin settings
groovy.settings.groovyVersion = "4.0"
groovy.settings.javaVersion = "17"
groovy.settings.jarManifest["Savant-Plugin-Class"] = "org.savantbuild.plugin.tomcat.TomcatPlugin"
groovyTestNG.settings.groovyVersion = "4.0"
groovyTestNG.settings.javaVersion = "17"
idea.settings.imlFile = "tomcat-plugin.iml"
idea.settings.moduleMap = ["org.savantbuild:savant-core:${savantVersion}"                 : "savant-core",
                           "org.savantbuild:savant-dependency-management:${savantVersion}": "savant-dependency-management",
                           "org.savantbuild:savant-io:${savantVersion}"                   : "savant-io",
                           "org.savantbuild:savant-utils:${savantVersion}"                : "savant-utils",
                           "org.savantbuild:savant-version:${savantVersion}"              : "savant-version",
                           "org.savantbuild.plugin:dependency:${savantVersion}"           : "dependency-plugin",
                           "org.savantbuild.plugin:file:${savantVersion}"                 : "file-plugin"]

target(name: "clean", description: "Cleans the project") {
  groovy.clean()
}

target(name: "compile", description: "Compiles the project") {
  groovy.compile()
}

target(name: "jar", description: "JARs the project", dependsOn: ["compile"]) {
  groovy.jar()
}

target(name: "doc", description: "Generates the GroovyDoc", dependsOn: ["compile"]) {
  groovy.document()
}

target(name: "test", description: "Runs the project's tests", dependsOn: ["jar"]) {
  groovyTestNG.test()
}

target(name: "int", description: "Releases a local integration build of the project", dependsOn: ["test"]) {
  dependency.integrate()
}

target(name: "release", description: "Releases a full version of the project", dependsOn: ["clean", "test"]) {
  release.release()
}

target(name: "idea", description: "Updates the IntelliJ IDEA module file") {
  idea.iml()
}
